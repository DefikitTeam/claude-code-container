{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "GitHubAutomationResult",
  "description": "Outcome payload returned by the GitHub automation service after a Claude session prompt.",
  "type": "object",
  "additionalProperties": false,
  "required": ["status", "diagnostics"],
  "properties": {
    "status": {
      "type": "string",
      "enum": ["success", "skipped", "error"],
      "description": "Automation outcome classification."
    },
    "issue": {
      "$ref": "#/definitions/IssueReference"
    },
    "pullRequest": {
      "$ref": "#/definitions/PullRequestReference"
    },
    "branch": {
      "type": "string",
      "description": "Git branch created or reused for the automation run.",
      "pattern": "^[A-Za-z0-9._\\-/]{1,200}$"
    },
    "commit": {
      "$ref": "#/definitions/CommitReference"
    },
    "skippedReason": {
      "type": "string",
      "description": "Human-readable explanation when automation elected not to run.",
      "minLength": 1,
      "maxLength": 400
    },
    "error": {
      "$ref": "#/definitions/ErrorDetail"
    },
    "diagnostics": {
      "$ref": "#/definitions/Diagnostics"
    },
    "metadata": {
      "type": "object",
      "description": "Optional free-form metadata (feature flags, experiment ids, etc.).",
      "additionalProperties": true
    }
  },
  "allOf": [
    {
      "if": {
        "properties": { "status": { "const": "success" } }
      },
      "then": {
        "required": ["issue"],
        "properties": {
          "error": false,
          "skippedReason": false
        }
      }
    },
    {
      "if": {
        "properties": { "status": { "const": "skipped" } }
      },
      "then": {
        "required": ["skippedReason"],
        "properties": {
          "issue": false,
          "pullRequest": false,
          "commit": false
        }
      }
    },
    {
      "if": {
        "properties": { "status": { "const": "error" } }
      },
      "then": {
        "required": ["error"],
        "properties": {
          "pullRequest": false
        }
      }
    }
  ],
  "definitions": {
    "IssueReference": {
      "type": "object",
      "additionalProperties": false,
      "required": ["id", "number", "url", "title"],
      "properties": {
        "id": {
          "type": "integer",
          "minimum": 1,
          "description": "GitHub issue database identifier."
        },
        "number": {
          "type": "integer",
          "minimum": 1,
          "description": "Issue number within the repository."
        },
        "url": {
          "type": "string",
          "format": "uri",
          "description": "HTML URL to the GitHub issue."
        },
        "title": {
          "type": "string",
          "description": "Title used for the GitHub issue.",
          "minLength": 1,
          "maxLength": 300
        }
      }
    },
    "PullRequestReference": {
      "type": "object",
      "additionalProperties": false,
      "required": ["number", "url", "branch"],
      "properties": {
        "number": {
          "type": "integer",
          "minimum": 1,
          "description": "Pull request number produced by the automation run."
        },
        "url": {
          "type": "string",
          "format": "uri",
          "description": "HTML URL for the pull request."
        },
        "branch": {
          "type": "string",
          "description": "Branch that was pushed and used as the PR head.",
          "pattern": "^[A-Za-z0-9._\\-/]{1,200}$"
        },
        "draft": {
          "type": "boolean",
          "description": "Whether the pull request was opened in draft mode.",
          "default": false
        }
      }
    },
    "CommitReference": {
      "type": "object",
      "additionalProperties": false,
      "required": ["sha", "message"],
      "properties": {
        "sha": {
          "type": "string",
          "pattern": "^[a-f0-9]{7,40}$",
          "description": "Commit SHA pushed to GitHub."
        },
        "message": {
          "type": "string",
          "description": "Commit message authored by the automation run.",
          "minLength": 1,
          "maxLength": 500
        }
      }
    },
    "ErrorDetail": {
      "type": "object",
      "additionalProperties": false,
      "required": ["code", "message"],
      "properties": {
        "code": {
          "type": "string",
          "description": "Machine-readable error code (e.g. installation-token-expired).",
          "minLength": 1,
          "maxLength": 80
        },
        "message": {
          "type": "string",
          "description": "Human-readable error description.",
          "minLength": 1,
          "maxLength": 400
        },
        "retryable": {
          "type": "boolean",
          "description": "Indicates if the error is safe to retry automatically."
        },
        "details": {
          "type": "object",
          "description": "Optional structured metadata (e.g. HTTP status, git command).",
          "additionalProperties": true
        }
      }
    },
    "Diagnostics": {
      "type": "object",
      "additionalProperties": false,
      "required": ["durationMs"],
      "properties": {
        "durationMs": {
          "type": "integer",
          "minimum": 0,
          "description": "Total automation runtime in milliseconds."
        },
        "attempts": {
          "type": "integer",
          "minimum": 1,
          "description": "Number of retry attempts performed by the automation service.",
          "default": 1
        },
        "logs": {
          "type": "array",
          "description": "Ordered execution log statements (truncated upstream).",
          "items": {
            "type": "string",
            "maxLength": 300
          },
          "maxItems": 50
        },
        "errorCode": {
          "type": "string",
          "description": "Captured error classification from the automation pipeline.",
          "maxLength": 80
        },
        "startTimestamp": {
          "type": "string",
          "format": "date-time",
          "description": "ISO timestamp marking automation start."
        },
        "endTimestamp": {
          "type": "string",
          "format": "date-time",
          "description": "ISO timestamp marking automation completion."
        }
      }
    }
  }
}
