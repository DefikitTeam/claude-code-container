{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "ACPSessionPromptResult",
  "description": "Container response envelope for ACP session prompt executions (extended with GitHub automation telemetry).",
  "type": "object",
  "additionalProperties": false,
  "required": ["stopReason", "usage"],
  "properties": {
    "stopReason": {
      "type": "string",
      "enum": ["completed", "cancelled", "error"],
      "description": "Termination classification for the Claude run."
    },
    "usage": {
      "type": "object",
      "additionalProperties": false,
      "required": ["inputTokens", "outputTokens"],
      "properties": {
        "inputTokens": {
          "type": "integer",
          "minimum": 0,
          "description": "Number of tokens sent to Claude."
        },
        "outputTokens": {
          "type": "integer",
          "minimum": 0,
          "description": "Number of tokens generated by Claude."
        }
      }
    },
    "summary": {
      "type": "string",
      "description": "High-level summary of the Claude response (truncated upstream).",
      "maxLength": 2000
    },
    "githubOperations": {
      "type": "object",
      "description": "Legacy git operation hints produced by the prompt processor.",
      "additionalProperties": true
    },
    "githubAutomation": {
      "$ref": "./github-automation.json"
    },
    "errorCode": {
      "type": "string",
      "description": "Prompt processor error classification when stopReason = error.",
      "maxLength": 80
    },
    "diagnostics": {
      "type": "object",
      "description": "Prompt processor diagnostics (stderr, exit codes, etc.).",
      "additionalProperties": true
    },
    "meta": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "durationMs": {
          "type": "integer",
          "minimum": 0,
          "description": "Total Claude prompt execution time in milliseconds (excluding automation)."
        },
        "preDiagnostics": {
          "type": "object",
          "description": "Results from any preflight diagnostics executed before the prompt run.",
          "additionalProperties": true
        },
        "workspace": {
          "type": "object",
          "description": "Workspace descriptor returned by the workspace service.",
          "additionalProperties": false,
          "required": ["sessionId", "path", "isEphemeral"],
          "properties": {
            "sessionId": {
              "type": "string",
              "description": "Identifier of the workspace/session pairing."
            },
            "path": {
              "type": "string",
              "description": "Absolute path to the workspace root inside the container."
            },
            "isEphemeral": {
              "type": "boolean",
              "description": "Indicates whether the workspace is ephemeral (should be cleaned up)."
            },
            "git": {
              "type": "object",
              "description": "Lightweight git metadata captured during workspace preparation.",
              "additionalProperties": false,
              "properties": {
                "currentBranch": {
                  "type": "string",
                  "description": "Current branch detected in the workspace."
                },
                "hasUncommittedChanges": {
                  "type": "boolean",
                  "description": "True when git status detects uncommitted changes."
                },
                "remoteUrl": {
                  "type": "string",
                  "format": "uri",
                  "description": "Remote origin URL if available."
                },
                "lastCommit": {
                  "type": "string",
                  "description": "Last commit message or identifier."
                }
              }
            }
          }
        },
        "githubAutomationVersion": {
          "type": "string",
          "description": "Semantic version for the GitHub automation contract implemented by the container.",
          "pattern": "^\\d+\\.\\d+\\.\\d+(?:-[A-Za-z0-9.-]+)?$"
        }
      }
    }
  },
  "allOf": [
    {
      "if": {
        "properties": { "stopReason": { "const": "error" } }
      },
      "then": {
        "required": ["errorCode"]
      }
    },
    {
      "if": {
        "properties": { "githubAutomation": { "type": "object" } }
      },
      "then": {
        "required": ["meta"],
        "properties": {
          "meta": {
            "required": ["githubAutomationVersion"]
          }
        }
      }
    }
  ]
}
