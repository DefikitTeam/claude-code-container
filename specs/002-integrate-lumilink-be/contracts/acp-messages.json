{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "ACP Message Schema",
  "description": "Schema for ACP protocol messages between LumiLink-BE and containers",
  "type": "object",
  "required": ["messageId", "type", "timestamp"],
  "properties": {
    "messageId": {
      "type": "string",
      "description": "Unique identifier for the message",
      "format": "uuid"
    },
    "type": {
      "type": "string",
      "description": "Type of message",
      "enum": ["connect", "message", "event", "command", "status", "disconnect", "error"]
    },
    "timestamp": {
      "type": "string",
      "description": "ISO timestamp when the message was created",
      "format": "date-time"
    },
    "connectionId": {
      "type": "string",
      "description": "Identifier of the connection this message belongs to"
    },
    "containerId": {
      "type": "string",
      "description": "Identifier of the container this message relates to"
    },
    "payload": {
      "type": "object",
      "description": "Message payload contents"
    }
  },
  "allOf": [
    {
      "if": {
        "properties": { "type": { "const": "connect" } }
      },
      "then": {
        "required": ["payload", "connectionId", "containerId"],
        "properties": {
          "payload": {
            "type": "object",
            "required": ["version", "capabilities"],
            "properties": {
              "version": {
                "type": "string",
                "description": "ACP protocol version requested",
                "pattern": "^\\d+\\.\\d+\\.\\d+$"
              },
              "capabilities": {
                "type": "array",
                "description": "List of capabilities supported by client",
                "items": {
                  "type": "string"
                }
              },
              "authToken": {
                "type": "string",
                "description": "JWT authentication token"
              },
              "compression": {
                "type": "string",
                "description": "Compression algorithm requested",
                "enum": ["none", "gzip", "zstd"]
              },
              "metadata": {
                "type": "object",
                "description": "Additional connection metadata"
              }
            }
          }
        }
      }
    },
    {
      "if": {
        "properties": { "type": { "const": "command" } }
      },
      "then": {
        "required": ["payload", "connectionId", "containerId"],
        "properties": {
          "payload": {
            "type": "object",
            "required": ["command", "args"],
            "properties": {
              "command": {
                "type": "string",
                "description": "Command to execute"
              },
              "args": {
                "type": "object",
                "description": "Command arguments"
              },
              "timeout": {
                "type": "integer",
                "description": "Command timeout in milliseconds",
                "minimum": 0
              },
              "idempotencyKey": {
                "type": "string",
                "description": "Key for idempotent command execution"
              }
            }
          }
        }
      }
    },
    {
      "if": {
        "properties": { "type": { "const": "event" } }
      },
      "then": {
        "required": ["payload", "connectionId", "containerId"],
        "properties": {
          "payload": {
            "type": "object",
            "required": ["eventType", "data"],
            "properties": {
              "eventType": {
                "type": "string",
                "description": "Type of event"
              },
              "data": {
                "type": "object",
                "description": "Event data"
              },
              "priority": {
                "type": "string",
                "enum": ["low", "medium", "high", "critical"],
                "default": "medium",
                "description": "Event priority level"
              }
            }
          }
        }
      }
    },
    {
      "if": {
        "properties": { "type": { "const": "status" } }
      },
      "then": {
        "required": ["payload", "connectionId", "containerId"],
        "properties": {
          "payload": {
            "type": "object",
            "required": ["status"],
            "properties": {
              "status": {
                "type": "string",
                "description": "Container status",
                "enum": ["starting", "running", "paused", "stopping", "stopped", "error"]
              },
              "metrics": {
                "type": "object",
                "description": "Container metrics",
                "properties": {
                  "cpu": {
                    "type": "number",
                    "description": "CPU usage percentage",
                    "minimum": 0,
                    "maximum": 100
                  },
                  "memory": {
                    "type": "number",
                    "description": "Memory usage in MB",
                    "minimum": 0
                  },
                  "connections": {
                    "type": "integer",
                    "description": "Number of active connections",
                    "minimum": 0
                  },
                  "uptime": {
                    "type": "integer",
                    "description": "Container uptime in seconds",
                    "minimum": 0
                  }
                }
              },
              "lastUpdated": {
                "type": "string",
                "format": "date-time",
                "description": "Timestamp when status was last updated"
              }
            }
          }
        }
      }
    },
    {
      "if": {
        "properties": { "type": { "const": "disconnect" } }
      },
      "then": {
        "required": ["connectionId", "containerId"],
        "properties": {
          "payload": {
            "type": "object",
            "properties": {
              "reason": {
                "type": "string",
                "description": "Reason for disconnection"
              },
              "reconnect": {
                "type": "boolean",
                "description": "Whether reconnection is expected"
              },
              "delay": {
                "type": "integer",
                "description": "Suggested reconnection delay in milliseconds",
                "minimum": 0
              }
            }
          }
        }
      }
    },
    {
      "if": {
        "properties": { "type": { "const": "message" } }
      },
      "then": {
        "required": ["payload", "connectionId", "containerId"],
        "properties": {
          "payload": {
            "type": "object",
            "description": "Generic message payload"
          }
        }
      }
    },
    {
      "if": {
        "properties": { "type": { "const": "error" } }
      },
      "then": {
        "required": ["payload"],
        "properties": {
          "payload": {
            "type": "object",
            "required": ["code", "message"],
            "properties": {
              "code": {
                "type": "string",
                "description": "Error code"
              },
              "message": {
                "type": "string",
                "description": "Error message"
              },
              "details": {
                "type": "object",
                "description": "Additional error details"
              },
              "recoverable": {
                "type": "boolean",
                "description": "Whether the error is recoverable"
              }
            }
          }
        }
      }
    }
  ]
}