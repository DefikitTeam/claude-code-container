{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Agent Client Protocol (ACP) JSON-RPC Schema",
  "description": "JSON-RPC method definitions for Claude Code container ACP agent implementation",
  "version": "0.3.1",
  "transport": "stdio",
  "format": "newline-delimited JSON-RPC 2.0",

  "methods": {
    "initialize": {
      "description": "Initialize agent capabilities and protocol version",
      "request": {
        "jsonrpc": "2.0",
        "id": { "type": ["string", "number"] },
        "method": "initialize",
        "params": {
          "type": "object",
          "properties": {
            "protocolVersion": {
              "type": "string",
              "description": "ACP protocol version",
              "example": "0.3.1"
            },
            "clientCapabilities": {
              "type": "object",
              "properties": {
                "editWorkspace": { "type": "boolean" },
                "filesRead": { "type": "boolean" },
                "filesWrite": { "type": "boolean" },
                "supportsImages": { "type": "boolean" },
                "supportsAudio": { "type": "boolean" }
              }
            },
            "clientInfo": {
              "type": "object",
              "properties": {
                "name": { "type": "string" },
                "version": { "type": "string" }
              }
            }
          },
          "required": ["protocolVersion"]
        }
      },
      "response": {
        "jsonrpc": "2.0",
        "id": { "type": ["string", "number"] },
        "result": {
          "type": "object",
          "properties": {
            "protocolVersion": {
              "type": "string",
              "description": "Supported ACP protocol version"
            },
            "agentCapabilities": {
              "type": "object",
              "properties": {
                "editWorkspace": { "type": "boolean", "default": true },
                "filesRead": { "type": "boolean", "default": true },
                "filesWrite": { "type": "boolean", "default": true },
                "sessionPersistence": { "type": "boolean", "default": true },
                "streamingUpdates": { "type": "boolean", "default": true },
                "githubIntegration": { "type": "boolean", "default": true },
                "supportsImages": { "type": "boolean", "default": false },
                "supportsAudio": { "type": "boolean", "default": false }
              }
            },
            "agentInfo": {
              "type": "object",
              "properties": {
                "name": { "type": "string", "default": "Claude Code Container" },
                "version": { "type": "string" },
                "description": { "type": "string" }
              }
            }
          },
          "required": ["protocolVersion", "agentCapabilities", "agentInfo"]
        }
      }
    },

    "session/new": {
      "description": "Create new session with isolated workspace",
      "request": {
        "jsonrpc": "2.0",
        "id": { "type": ["string", "number"] },
        "method": "session/new",
        "params": {
          "type": "object",
          "properties": {
            "workspaceUri": {
              "type": "string",
              "format": "uri",
              "description": "Workspace URI (file:// scheme)",
              "example": "file:///path/to/repository"
            },
            "mode": {
              "type": "string",
              "enum": ["conversation", "development"],
              "default": "development"
            },
            "sessionOptions": {
              "type": "object",
              "properties": {
                "persistHistory": { "type": "boolean", "default": true },
                "enableGitOps": { "type": "boolean", "default": true },
                "contextFiles": {
                  "type": "array",
                  "items": { "type": "string" }
                }
              }
            }
          }
        }
      },
      "response": {
        "jsonrpc": "2.0",
        "id": { "type": ["string", "number"] },
        "result": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "format": "uuid",
              "description": "Unique session identifier"
            },
            "workspaceInfo": {
              "type": "object",
              "properties": {
                "rootPath": { "type": "string" },
                "gitBranch": { "type": "string" },
                "hasUncommittedChanges": { "type": "boolean" }
              }
            }
          },
          "required": ["sessionId"]
        }
      }
    },

    "session/prompt": {
      "description": "Send user prompt to session for processing",
      "request": {
        "jsonrpc": "2.0",
        "id": { "type": ["string", "number"] },
        "method": "session/prompt",
        "params": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "format": "uuid"
            },
            "content": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ContentBlock"
              }
            },
            "contextFiles": {
              "type": "array",
              "items": { "type": "string" },
              "description": "Additional file paths for context"
            }
          },
          "required": ["sessionId", "content"]
        }
      },
      "response": {
        "jsonrpc": "2.0",
        "id": { "type": ["string", "number"] },
        "result": {
          "type": "object",
          "properties": {
            "stopReason": {
              "type": "string",
              "enum": ["completed", "cancelled", "error", "timeout"]
            },
            "usage": {
              "type": "object",
              "properties": {
                "inputTokens": { "type": "number" },
                "outputTokens": { "type": "number" }
              }
            }
          },
          "required": ["stopReason"]
        }
      }
    },

    "session/load": {
      "description": "Load existing session and optionally stream history",
      "request": {
        "jsonrpc": "2.0",
        "id": { "type": ["string", "number"] },
        "method": "session/load",
        "params": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "format": "uuid"
            },
            "includeHistory": {
              "type": "boolean",
              "default": false
            }
          },
          "required": ["sessionId"]
        }
      },
      "response": {
        "jsonrpc": "2.0",
        "id": { "type": ["string", "number"] },
        "result": {
          "type": "object",
          "properties": {
            "sessionInfo": {
              "type": "object",
              "properties": {
                "sessionId": { "type": "string" },
                "state": {
                  "type": "string",
                  "enum": ["active", "paused", "completed", "error"]
                },
                "createdAt": { "type": "number" },
                "lastActiveAt": { "type": "number" }
              }
            },
            "historyAvailable": { "type": "boolean" }
          },
          "required": ["sessionInfo"]
        }
      }
    },

    "cancel": {
      "description": "Cancel ongoing operation for session",
      "request": {
        "jsonrpc": "2.0",
        "id": { "type": ["string", "number"] },
        "method": "cancel",
        "params": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "format": "uuid"
            }
          },
          "required": ["sessionId"]
        }
      },
      "response": {
        "jsonrpc": "2.0",
        "id": { "type": ["string", "number"] },
        "result": {
          "type": "object",
          "properties": {
            "cancelled": { "type": "boolean" }
          }
        }
      }
    }
  },

  "notifications": {
    "session/update": {
      "description": "Real-time progress updates during prompt processing",
      "notification": {
        "jsonrpc": "2.0",
        "method": "session/update",
        "params": {
          "type": "object",
          "properties": {
            "sessionId": {
              "type": "string",
              "format": "uuid"
            },
            "content": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ContentBlock"
              }
            },
            "status": {
              "type": "string",
              "enum": ["thinking", "working", "completed", "error"]
            },
            "progress": {
              "type": "object",
              "properties": {
                "current": { "type": "number" },
                "total": { "type": "number" },
                "message": { "type": "string" }
              }
            }
          },
          "required": ["sessionId", "status"]
        }
      }
    }
  },

  "definitions": {
    "ContentBlock": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": ["text", "image", "diff", "file", "thought", "error"]
        },
        "content": {
          "type": "string"
        },
        "metadata": {
          "type": "object",
          "properties": {
            "filename": { "type": "string" },
            "language": { "type": "string" },
            "startLine": { "type": "number" },
            "endLine": { "type": "number" },
            "mimeType": { "type": "string" }
          }
        }
      },
      "required": ["type", "content"]
    },

    "ErrorResponse": {
      "type": "object",
      "properties": {
        "jsonrpc": { "type": "string", "const": "2.0" },
        "id": { "type": ["string", "number", "null"] },
        "error": {
          "type": "object",
          "properties": {
            "code": { "type": "number" },
            "message": { "type": "string" },
            "data": { "type": "object" }
          },
          "required": ["code", "message"]
        }
      },
      "required": ["jsonrpc", "id", "error"]
    }
  },

  "errorCodes": {
    "-32700": "Parse error",
    "-32600": "Invalid Request",
    "-32601": "Method not found",
    "-32602": "Invalid params",
    "-32603": "Internal error",
    "-32000": "Session not found",
    "-32001": "Workspace error",
    "-32002": "Authentication failed",
    "-32003": "Operation cancelled"
  },

  "examples": {
    "initializeFlow": [
      {
        "description": "Client initializes agent",
        "request": {
          "jsonrpc": "2.0",
          "id": 1,
          "method": "initialize",
          "params": {
            "protocolVersion": "0.3.1",
            "clientCapabilities": {
              "editWorkspace": true,
              "filesRead": true,
              "filesWrite": true
            },
            "clientInfo": {
              "name": "Zed",
              "version": "0.100.0"
            }
          }
        },
        "response": {
          "jsonrpc": "2.0",
          "id": 1,
          "result": {
            "protocolVersion": "0.3.1",
            "agentCapabilities": {
              "editWorkspace": true,
              "filesRead": true,
              "filesWrite": true,
              "sessionPersistence": true,
              "streamingUpdates": true,
              "githubIntegration": true
            },
            "agentInfo": {
              "name": "Claude Code Container",
              "version": "1.0.0",
              "description": "AI coding agent powered by Claude"
            }
          }
        }
      }
    ],

    "sessionFlow": [
      {
        "description": "Create new session",
        "request": {
          "jsonrpc": "2.0",
          "id": 2,
          "method": "session/new",
          "params": {
            "workspaceUri": "file:///Users/dev/myproject",
            "mode": "development"
          }
        },
        "response": {
          "jsonrpc": "2.0",
          "id": 2,
          "result": {
            "sessionId": "550e8400-e29b-41d4-a716-446655440000",
            "workspaceInfo": {
              "rootPath": "/Users/dev/myproject",
              "gitBranch": "main",
              "hasUncommittedChanges": false
            }
          }
        }
      },
      {
        "description": "Send prompt to session",
        "request": {
          "jsonrpc": "2.0",
          "id": 3,
          "method": "session/prompt",
          "params": {
            "sessionId": "550e8400-e29b-41d4-a716-446655440000",
            "content": [
              {
                "type": "text",
                "content": "Add error handling to the main function"
              }
            ]
          }
        },
        "response": {
          "jsonrpc": "2.0",
          "id": 3,
          "result": {
            "stopReason": "completed",
            "usage": {
              "inputTokens": 150,
              "outputTokens": 300
            }
          }
        }
      },
      {
        "description": "Session update notification (streaming)",
        "notification": {
          "jsonrpc": "2.0",
          "method": "session/update",
          "params": {
            "sessionId": "550e8400-e29b-41d4-a716-446655440000",
            "content": [
              {
                "type": "thought",
                "content": "I'll analyze the main function and add appropriate error handling..."
              }
            ],
            "status": "thinking"
          }
        }
      }
    ]
  }
}